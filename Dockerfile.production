# Multi-stage build for maapallo.info production deployment

# Build stage for client
FROM node:20-alpine AS client-build

WORKDIR /app/client

# Copy client package files
COPY client/package*.json ./
RUN npm ci

# Copy client source code
COPY client/ ./

# Build argument for Cesium Ion token
ARG CESIUM_ION_TOKEN
ENV CESIUM_ION_TOKEN=${CESIUM_ION_TOKEN}

# Build the client application
RUN npm run build

# Production stage
FROM python:3.11-alpine AS production

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    postgresql-client \
    curl \
    && rm -rf /var/cache/apk/*

# Copy server requirements and install Python dependencies
COPY server/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy server source code
COPY server/ ./

# Copy built client files to serve as static files
COPY --from=client-build /app/client/dist ./static

# Copy Cesium assets for production
COPY --from=client-build /app/client/node_modules/cesium/Build/Cesium ./static/cesium

# Copy world.geojson file for the application
COPY client/public/data/world.geojson ./static/data/

# Make startup script executable
RUN chmod +x start.sh

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8080
ENV ENVIRONMENT=production

# Create non-root user for security
RUN addgroup -g 1001 -S appgroup && \
    adduser -S appuser -u 1001 -G appgroup

# Change ownership of app directory
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/api/v1/health || exit 1

# Start command - run migrations then start server
CMD ["./start.sh"]
